name: CMake
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  build:
    name: ${{ matrix.config.name }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC 2019",
            os: windows-latest,
            compiler: { type: VISUAL, version: 16, cc: "cl", cxx: "cl" },
            generator: "'Visual Studio 16 2019'"
          }
        - {
            name: "Ubuntu GCC 10.3.0",
            os: ubuntu-latest,
            compiler: { type: GCC, version: 10, cc: "gcc-10", cxx: "g++-10" },
            lib: "libstdc++11",
            generator: "Ninja"
          }
        - {
            name: "Ubuntu Clang 12.0.0 + libc++",
            os: ubuntu-20.04,
            compiler: { type: CLANG, version: 12, cc: "clang-12", cxx: "clang++-12" },
            lib: "libc++",
            generator: "Ninja"
          }
        build_type: [ "Release", "Debug" ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Clang
        if: matrix.config.compiler.type == 'CLANG'
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.config.compiler.version }}
      - name: Install Libc++
        if: matrix.config.compiler.type == 'CLANG' && matrix.config.lib == 'libc++'
        shell: bash
        run: |
          sudo apt install -y libc++-${{ matrix.config.compiler.version }}-dev libc++abi-${{ matrix.config.compiler.version }}-dev libunwind-${{ matrix.config.compiler.version }}-dev
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Conan
        run: |
          pip install -U conan
      - name: Install Ninja
        shell: bash
        run: |
          if [ $RUNNER_OS == 'Linux' ]; then
            sudo apt install -y ninja-build
          fi
      - name: Configure CMake
        run: cmake -G ${{matrix.config.generator}} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_COMPILER=${{matrix.config.compiler.cc}} -DCMAKE_CXX_COMPILER=${{matrix.config.compiler.cxx}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}}